// Generated by LiveScript 1.5.0
(function(){
  var window, transformObject, transformStrings, transformArgs, LogService;
  window = window != null || (typeof self != 'undefined' && self !== null) || this;
  transformObject = function(it){
    if (typeof it === 'object' && !(it instanceof Array)) {
      return JSON.stringify(it, null, 2);
    } else {
      return it;
    }
  };
  transformStrings = function(args, arg$){
    var backgrounds, colors;
    backgrounds = arg$.backgrounds, colors = arg$.colors;
    return args.map(function(arg, i){
      var usedStrings;
      usedStrings = 0;
      if (typeof arg === 'string') {
        arg = '%c ' + arg;
        args.splice(i, 0, "background: #" + backgrounds[usedStrings] + "; color: #" + colors[usedStrings]);
        usedStrings++;
      }
      return arg;
    });
  };
  transformArgs = function(args, settings){
    var this$ = this;
    args = transformStrings(args, settings);
    return args.map(function(arg, i){
      return transformObject(arg);
    });
  };
  LogService = (function(){
    LogService.displayName = 'LogService';
    var prototype = LogService.prototype, constructor = LogService;
    function LogService(arg$){
      var ref$, backgrounds, ref1$, colors;
      ref$ = arg$ != null
        ? arg$
        : {}, backgrounds = (ref1$ = ref$.backgrounds) != null
        ? ref1$
        : ['#fff'], colors = (ref1$ = ref$.colors) != null
        ? ref1$
        : ['#000'];
      ({
        backgrounds: this.settings.backgrounds
      });
      ({
        colors: this.settings.colors
      });
    }
    LogService.prototype.settings = {
      backgrounds: [],
      colors: []
    };
    LogService.prototype.info = function(){
      var args, res$, i$, to$;
      res$ = [];
      for (i$ = 0, to$ = arguments.length; i$ < to$; ++i$) {
        res$.push(arguments[i$]);
      }
      args = res$;
      console.info.apply(null, transformArgs(args, this.settings));
    };
    return LogService;
  }());
  module.exports = LogService;
}).call(this);
